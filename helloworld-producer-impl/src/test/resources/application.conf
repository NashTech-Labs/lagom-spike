#
# Copyright (C) 2016 Lightbend Inc. <http://www.lightbend.com>
#

play.crypto.secret = whatever
play.application.loader = sample.helloworld.impl.HelloLoader

brokers = ${lagom.broker.defaults.kafka.brokers}

client {
  default {
    # Exponential backoff for failures
    failureexponentialbackoff {
      # minimum (initial) duration until processor is started again
      # after failure
      min = 3s

      # the exponential backoff is capped to this duration
      max = 30s

      # additional random delay is based on this factor
      randomfactor = 0.2
    }
  }

  # configuration used by the Lagom Kafka producer
  producer = ${lagom.broker.kafka.client.default}
  producer.role = ""

  # configuration used by the Lagom Kafka consumer
  consumer {
    failureexponentialbackoff = ${lagom.broker.kafka.client.default.failureexponentialbackoff}

    # Number of messages batched together by the consumer before the related messages'
    # offsets are committed to Kafka.
    # By increasing the batchingsize you are trading speed with the risk of having
    # to reprocess a larger number of messages if a failure occurs.
    # The value provided must be strictly greater than zero.
    batchingsize = 20

    # Interval of time waited by the consumer before the currently batched messages'
    # offsets are committed to Kafka.
    # This parameter is useful to ensure that messages' offsets are always committed
    # within a fixed amount of time.
    # The value provided must be strictly greater than zero.
    batchinginterval = 5 seconds
  }
}